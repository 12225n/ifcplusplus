/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/IfcPPBasicTypes.h"
#include "ifcpp/model/IfcPPObject.h"
#include "ifcpp/model/IfcPPGlobal.h"

// TYPE IfcDistributionPortTypeEnum = ENUMERATION OF	(CABLE	,CABLECARRIER	,DUCT	,PIPE	,USERDEFINED	,NOTDEFINED);
class IFCPP_EXPORT IfcDistributionPortTypeEnum : virtual public IfcPPObject
{
public:
	enum IfcDistributionPortTypeEnumEnum
	{
		ENUM_CABLE,
		ENUM_CABLECARRIER,
		ENUM_DUCT,
		ENUM_PIPE,
		ENUM_USERDEFINED,
		ENUM_NOTDEFINED
	};

	IfcDistributionPortTypeEnum();
	IfcDistributionPortTypeEnum( IfcDistributionPortTypeEnumEnum e ) { m_enum = e; }
	~IfcDistributionPortTypeEnum();
	virtual const char* className() const { return "IfcDistributionPortTypeEnum"; }
	virtual shared_ptr<IfcPPObject> getDeepCopy( IfcPPCopyOptions& options );
	virtual void getStepParameter( std::stringstream& stream, bool is_select_type = false ) const;
	static shared_ptr<IfcDistributionPortTypeEnum> createObjectFromSTEP( const std::wstring& arg, const map_t<int,shared_ptr<IfcPPEntity> >& map );
	IfcDistributionPortTypeEnumEnum m_enum;
};

