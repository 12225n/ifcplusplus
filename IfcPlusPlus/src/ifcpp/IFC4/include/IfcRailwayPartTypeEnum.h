/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"
#include "IfcFacilityPartTypeSelect.h"

// TYPE IfcRailwayPartTypeEnum = ENUMERATION OF	(TRACKSTRUCTURE	,TRACKSTRUCTUREPART	,LINESIDESTRUCTUREPART	,DILATATIONSUPERSTRUCTURE	,PLAINTRACKSUPESTRUCTURE	,LINESIDESTRUCTURE	,SUPERSTRUCTURE	,TURNOUTSUPERSTRUCTURE	,USERDEFINED	,NOTDEFINED);
class IFCQUERY_EXPORT IfcRailwayPartTypeEnum : public IfcFacilityPartTypeSelect
{
public:
	enum IfcRailwayPartTypeEnumEnum
	{
		ENUM_TRACKSTRUCTURE,
		ENUM_TRACKSTRUCTUREPART,
		ENUM_LINESIDESTRUCTUREPART,
		ENUM_DILATATIONSUPERSTRUCTURE,
		ENUM_PLAINTRACKSUPESTRUCTURE,
		ENUM_LINESIDESTRUCTURE,
		ENUM_SUPERSTRUCTURE,
		ENUM_TURNOUTSUPERSTRUCTURE,
		ENUM_USERDEFINED,
		ENUM_NOTDEFINED
	};

	IfcRailwayPartTypeEnum() = default;
	IfcRailwayPartTypeEnum( IfcRailwayPartTypeEnumEnum e ) { m_enum = e; }
	~IfcRailwayPartTypeEnum() = default;
	virtual const char* className() const { return "IfcRailwayPartTypeEnum"; }
	virtual shared_ptr<BuildingObject> getDeepCopy( BuildingCopyOptions& options );
	virtual void getStepParameter( std::stringstream& stream, bool is_select_type = false ) const;
	virtual const std::wstring toString() const;
	static shared_ptr<IfcRailwayPartTypeEnum> createObjectFromSTEP( const std::wstring& arg, const std::map<int,shared_ptr<BuildingEntity> >& map );
	IfcRailwayPartTypeEnumEnum m_enum;
};

