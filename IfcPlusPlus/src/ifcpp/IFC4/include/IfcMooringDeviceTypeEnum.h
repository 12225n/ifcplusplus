/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"

// TYPE IfcMooringDeviceTypeEnum = ENUMERATION OF	(LINETENSIONER	,MAGNETICDEVICE	,MOORINGHOOKS	,VACUUMDEVICE	,BOLLARD	,USERDEFINED	,NOTDEFINED);
class IFCQUERY_EXPORT IfcMooringDeviceTypeEnum : virtual public BuildingObject
{
public:
	enum IfcMooringDeviceTypeEnumEnum
	{
		ENUM_LINETENSIONER,
		ENUM_MAGNETICDEVICE,
		ENUM_MOORINGHOOKS,
		ENUM_VACUUMDEVICE,
		ENUM_BOLLARD,
		ENUM_USERDEFINED,
		ENUM_NOTDEFINED
	};

	IfcMooringDeviceTypeEnum() = default;
	IfcMooringDeviceTypeEnum( IfcMooringDeviceTypeEnumEnum e ) { m_enum = e; }
	~IfcMooringDeviceTypeEnum() = default;
	virtual const char* className() const { return "IfcMooringDeviceTypeEnum"; }
	virtual shared_ptr<BuildingObject> getDeepCopy( BuildingCopyOptions& options );
	virtual void getStepParameter( std::stringstream& stream, bool is_select_type = false ) const;
	virtual const std::wstring toString() const;
	static shared_ptr<IfcMooringDeviceTypeEnum> createObjectFromSTEP( const std::wstring& arg, const std::map<int,shared_ptr<BuildingEntity> >& map );
	IfcMooringDeviceTypeEnumEnum m_enum;
};

