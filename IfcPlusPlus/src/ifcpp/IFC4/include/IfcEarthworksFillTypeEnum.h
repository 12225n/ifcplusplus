/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"

// TYPE IfcEarthworksFillTypeEnum = ENUMERATION OF	(BACKFILL	,COUNTERWEIGHT	,SUBGRADE	,EMBANKMENT	,TRANSITIONSECTION	,SUBGRADEBED	,SLOPEFILL	,USERDEFINED	,NOTDEFINED);
class IFCQUERY_EXPORT IfcEarthworksFillTypeEnum : virtual public BuildingObject
{
public:
	enum IfcEarthworksFillTypeEnumEnum
	{
		ENUM_BACKFILL,
		ENUM_COUNTERWEIGHT,
		ENUM_SUBGRADE,
		ENUM_EMBANKMENT,
		ENUM_TRANSITIONSECTION,
		ENUM_SUBGRADEBED,
		ENUM_SLOPEFILL,
		ENUM_USERDEFINED,
		ENUM_NOTDEFINED
	};

	IfcEarthworksFillTypeEnum() = default;
	IfcEarthworksFillTypeEnum( IfcEarthworksFillTypeEnumEnum e ) { m_enum = e; }
	~IfcEarthworksFillTypeEnum() = default;
	virtual const char* className() const { return "IfcEarthworksFillTypeEnum"; }
	virtual shared_ptr<BuildingObject> getDeepCopy( BuildingCopyOptions& options );
	virtual void getStepParameter( std::stringstream& stream, bool is_select_type = false ) const;
	virtual const std::wstring toString() const;
	static shared_ptr<IfcEarthworksFillTypeEnum> createObjectFromSTEP( const std::wstring& arg, const std::map<int,shared_ptr<BuildingEntity> >& map );
	IfcEarthworksFillTypeEnumEnum m_enum;
};

