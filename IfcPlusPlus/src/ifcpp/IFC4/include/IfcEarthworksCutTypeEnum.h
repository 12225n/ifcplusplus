/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"

// TYPE IfcEarthworksCutTypeEnum = ENUMERATION OF	(TRENCH	,DREDGING	,EXCAVATION	,OVEREXCAVATION	,TOPSOILREMOVAL	,STEPEXCAVATION	,PAVEMENTMILLING	,CUT	,BASE_EXCAVATION	,USERDEFINED	,NOTDEFINED);
class IFCQUERY_EXPORT IfcEarthworksCutTypeEnum : virtual public BuildingObject
{
public:
	enum IfcEarthworksCutTypeEnumEnum
	{
		ENUM_TRENCH,
		ENUM_DREDGING,
		ENUM_EXCAVATION,
		ENUM_OVEREXCAVATION,
		ENUM_TOPSOILREMOVAL,
		ENUM_STEPEXCAVATION,
		ENUM_PAVEMENTMILLING,
		ENUM_CUT,
		ENUM_BASE_EXCAVATION,
		ENUM_USERDEFINED,
		ENUM_NOTDEFINED
	};

	IfcEarthworksCutTypeEnum() = default;
	IfcEarthworksCutTypeEnum( IfcEarthworksCutTypeEnumEnum e ) { m_enum = e; }
	~IfcEarthworksCutTypeEnum() = default;
	virtual const char* className() const { return "IfcEarthworksCutTypeEnum"; }
	virtual shared_ptr<BuildingObject> getDeepCopy( BuildingCopyOptions& options );
	virtual void getStepParameter( std::stringstream& stream, bool is_select_type = false ) const;
	virtual const std::wstring toString() const;
	static shared_ptr<IfcEarthworksCutTypeEnum> createObjectFromSTEP( const std::wstring& arg, const std::map<int,shared_ptr<BuildingEntity> >& map );
	IfcEarthworksCutTypeEnumEnum m_enum;
};

