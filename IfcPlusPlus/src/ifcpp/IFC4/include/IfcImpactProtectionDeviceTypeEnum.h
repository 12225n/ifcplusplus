/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"
#include "IfcImpactProtectionDeviceTypeSelect.h"

// TYPE IfcImpactProtectionDeviceTypeEnum = ENUMERATION OF	(CRASHCUSHION	,DAMPINGSYSTEM	,FENDER	,BUMPER	,USERDEFINED	,NOTDEFINED);
class IFCQUERY_EXPORT IfcImpactProtectionDeviceTypeEnum : public IfcImpactProtectionDeviceTypeSelect
{
public:
	enum IfcImpactProtectionDeviceTypeEnumEnum
	{
		ENUM_CRASHCUSHION,
		ENUM_DAMPINGSYSTEM,
		ENUM_FENDER,
		ENUM_BUMPER,
		ENUM_USERDEFINED,
		ENUM_NOTDEFINED
	};

	IfcImpactProtectionDeviceTypeEnum() = default;
	IfcImpactProtectionDeviceTypeEnum( IfcImpactProtectionDeviceTypeEnumEnum e ) { m_enum = e; }
	~IfcImpactProtectionDeviceTypeEnum() = default;
	virtual const char* className() const { return "IfcImpactProtectionDeviceTypeEnum"; }
	virtual shared_ptr<BuildingObject> getDeepCopy( BuildingCopyOptions& options );
	virtual void getStepParameter( std::stringstream& stream, bool is_select_type = false ) const;
	virtual const std::wstring toString() const;
	static shared_ptr<IfcImpactProtectionDeviceTypeEnum> createObjectFromSTEP( const std::wstring& arg, const std::map<int,shared_ptr<BuildingEntity> >& map );
	IfcImpactProtectionDeviceTypeEnumEnum m_enum;
};

