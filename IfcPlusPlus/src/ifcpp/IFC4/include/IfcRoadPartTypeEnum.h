/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"
#include "IfcFacilityPartTypeSelect.h"

// TYPE IfcRoadPartTypeEnum = ENUMERATION OF	(ROADSIDEPART	,BUS_STOP	,HARDSHOULDER	,INTERSECTION	,PASSINGBAY	,ROADWAYPLATEAU	,ROADSIDE	,REFUGEISLAND	,TOLLPLAZA	,CENTRALRESERVE	,SIDEWALK	,PARKINGBAY	,RAILWAYCROSSING	,PEDESTRIAN_CROSSING	,SOFTSHOULDER	,BICYCLECROSSING	,CENTRALISLAND	,SHOULDER	,TRAFFICLANE	,ROADSEGMENT	,ROUNDABOUT	,LAYBY	,CARRIAGEWAY	,TRAFFICISLAND	,USERDEFINED	,NOTDEFINED);
class IFCQUERY_EXPORT IfcRoadPartTypeEnum : public IfcFacilityPartTypeSelect
{
public:
	enum IfcRoadPartTypeEnumEnum
	{
		ENUM_ROADSIDEPART,
		ENUM_BUS_STOP,
		ENUM_HARDSHOULDER,
		ENUM_INTERSECTION,
		ENUM_PASSINGBAY,
		ENUM_ROADWAYPLATEAU,
		ENUM_ROADSIDE,
		ENUM_REFUGEISLAND,
		ENUM_TOLLPLAZA,
		ENUM_CENTRALRESERVE,
		ENUM_SIDEWALK,
		ENUM_PARKINGBAY,
		ENUM_RAILWAYCROSSING,
		ENUM_PEDESTRIAN_CROSSING,
		ENUM_SOFTSHOULDER,
		ENUM_BICYCLECROSSING,
		ENUM_CENTRALISLAND,
		ENUM_SHOULDER,
		ENUM_TRAFFICLANE,
		ENUM_ROADSEGMENT,
		ENUM_ROUNDABOUT,
		ENUM_LAYBY,
		ENUM_CARRIAGEWAY,
		ENUM_TRAFFICISLAND,
		ENUM_USERDEFINED,
		ENUM_NOTDEFINED
	};

	IfcRoadPartTypeEnum() = default;
	IfcRoadPartTypeEnum( IfcRoadPartTypeEnumEnum e ) { m_enum = e; }
	~IfcRoadPartTypeEnum() = default;
	virtual const char* className() const { return "IfcRoadPartTypeEnum"; }
	virtual shared_ptr<BuildingObject> getDeepCopy( BuildingCopyOptions& options );
	virtual void getStepParameter( std::stringstream& stream, bool is_select_type = false ) const;
	virtual const std::wstring toString() const;
	static shared_ptr<IfcRoadPartTypeEnum> createObjectFromSTEP( const std::wstring& arg, const std::map<int,shared_ptr<BuildingEntity> >& map );
	IfcRoadPartTypeEnumEnum m_enum;
};

