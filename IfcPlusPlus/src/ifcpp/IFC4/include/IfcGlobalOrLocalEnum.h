/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/IfcPPBasicTypes.h"
#include "ifcpp/model/IfcPPObject.h"
#include "ifcpp/model/IfcPPGlobal.h"

// TYPE IfcGlobalOrLocalEnum = ENUMERATION OF	(GLOBAL_COORDS	,LOCAL_COORDS);
class IFCPP_EXPORT IfcGlobalOrLocalEnum : virtual public IfcPPObject
{
public:
	enum IfcGlobalOrLocalEnumEnum
	{
		ENUM_GLOBAL_COORDS,
		ENUM_LOCAL_COORDS
	};

	IfcGlobalOrLocalEnum();
	IfcGlobalOrLocalEnum( IfcGlobalOrLocalEnumEnum e ) { m_enum = e; }
	~IfcGlobalOrLocalEnum();
	virtual const char* className() const { return "IfcGlobalOrLocalEnum"; }
	virtual shared_ptr<IfcPPObject> getDeepCopy( IfcPPCopyOptions& options );
	virtual void getStepParameter( std::stringstream& stream, bool is_select_type = false ) const;
	static shared_ptr<IfcGlobalOrLocalEnum> createObjectFromSTEP( const std::wstring& arg, const map_t<int,shared_ptr<IfcPPEntity> >& map );
	IfcGlobalOrLocalEnumEnum m_enum;
};

