/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/IfcPPBasicTypes.h"
#include "ifcpp/model/IfcPPObject.h"
#include "ifcpp/model/IfcPPGlobal.h"
#include "IfcPlaneAngleMeasure.h"

// TYPE IfcPositivePlaneAngleMeasure = IfcPlaneAngleMeasure;
class IFCPP_EXPORT IfcPositivePlaneAngleMeasure : public IfcPlaneAngleMeasure
{
public:
	IfcPositivePlaneAngleMeasure();
	IfcPositivePlaneAngleMeasure( double value ) { m_value = value; }
	~IfcPositivePlaneAngleMeasure();
	virtual const char* className() const { return "IfcPositivePlaneAngleMeasure"; }
	virtual shared_ptr<IfcPPObject> getDeepCopy( IfcPPCopyOptions& options );
	virtual void getStepParameter( std::stringstream& stream, bool is_select_type = false ) const;
	virtual const std::wstring toString() const;
	static shared_ptr<IfcPositivePlaneAngleMeasure> createObjectFromSTEP( const std::wstring& arg, const std::map<int,shared_ptr<IfcPPEntity> >& map );
};

