/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"

// TYPE IfcBridgeTypeEnum = ENUMERATION OF	(ARCHED	,CABLE_STAYED	,CANTILEVER	,CULVERT	,FRAMEWORK	,GIRDER	,SUSPENSION	,TRUSS	,USERDEFINED	,NOTDEFINED);
class IFCQUERY_EXPORT IfcBridgeTypeEnum : virtual public BuildingObject
{
public:
	enum IfcBridgeTypeEnumEnum
	{
		ENUM_ARCHED,
		ENUM_CABLE_STAYED,
		ENUM_CANTILEVER,
		ENUM_CULVERT,
		ENUM_FRAMEWORK,
		ENUM_GIRDER,
		ENUM_SUSPENSION,
		ENUM_TRUSS,
		ENUM_USERDEFINED,
		ENUM_NOTDEFINED
	};

	IfcBridgeTypeEnum() = default;
	IfcBridgeTypeEnum( IfcBridgeTypeEnumEnum e ) { m_enum = e; }
	~IfcBridgeTypeEnum() = default;
	virtual const char* className() const { return "IfcBridgeTypeEnum"; }
	virtual shared_ptr<BuildingObject> getDeepCopy( BuildingCopyOptions& options );
	virtual void getStepParameter( std::stringstream& stream, bool is_select_type = false ) const;
	virtual const std::wstring toString() const;
	static shared_ptr<IfcBridgeTypeEnum> createObjectFromSTEP( const std::wstring& arg, const std::map<int,shared_ptr<BuildingEntity> >& map );
	IfcBridgeTypeEnumEnum m_enum;
};

