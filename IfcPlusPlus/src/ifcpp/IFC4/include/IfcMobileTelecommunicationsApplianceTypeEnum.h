/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/GlobalDefines.h"
#include "ifcpp/model/BasicTypes.h"
#include "ifcpp/model/BuildingObject.h"

// TYPE IfcMobileTelecommunicationsApplianceTypeEnum = ENUMERATION OF	(E_UTRAN_NODE_B	,REMOTE_RADIO_UNIT	,ACCESSPOINT	,BASETRANSCEIVERSTATION	,REMOTEUNIT	,BASEBANDUNIT	,MASTERUNIT	,USERDEFINED	,NOTDEFINED);
class IFCQUERY_EXPORT IfcMobileTelecommunicationsApplianceTypeEnum : virtual public BuildingObject
{
public:
	enum IfcMobileTelecommunicationsApplianceTypeEnumEnum
	{
		ENUM_E_UTRAN_NODE_B,
		ENUM_REMOTE_RADIO_UNIT,
		ENUM_ACCESSPOINT,
		ENUM_BASETRANSCEIVERSTATION,
		ENUM_REMOTEUNIT,
		ENUM_BASEBANDUNIT,
		ENUM_MASTERUNIT,
		ENUM_USERDEFINED,
		ENUM_NOTDEFINED
	};

	IfcMobileTelecommunicationsApplianceTypeEnum() = default;
	IfcMobileTelecommunicationsApplianceTypeEnum( IfcMobileTelecommunicationsApplianceTypeEnumEnum e ) { m_enum = e; }
	~IfcMobileTelecommunicationsApplianceTypeEnum() = default;
	virtual const char* className() const { return "IfcMobileTelecommunicationsApplianceTypeEnum"; }
	virtual shared_ptr<BuildingObject> getDeepCopy( BuildingCopyOptions& options );
	virtual void getStepParameter( std::stringstream& stream, bool is_select_type = false ) const;
	virtual const std::wstring toString() const;
	static shared_ptr<IfcMobileTelecommunicationsApplianceTypeEnum> createObjectFromSTEP( const std::wstring& arg, const std::map<int,shared_ptr<BuildingEntity> >& map );
	IfcMobileTelecommunicationsApplianceTypeEnumEnum m_enum;
};

