/* Code generated by IfcQuery EXPRESS generator, www.ifcquery.com */

#pragma once
#include <vector>
#include <map>
#include <sstream>
#include <string>
#include "ifcpp/model/IfcPPBasicTypes.h"
#include "ifcpp/model/IfcPPObject.h"
#include "ifcpp/model/IfcPPGlobal.h"

// TYPE IfcTextPath = ENUMERATION OF	(LEFT	,RIGHT	,UP	,DOWN);
class IFCPP_EXPORT IfcTextPath : virtual public IfcPPObject
{
public:
	enum IfcTextPathEnum
	{
		ENUM_LEFT,
		ENUM_RIGHT,
		ENUM_UP,
		ENUM_DOWN
	};

	IfcTextPath();
	IfcTextPath( IfcTextPathEnum e ) { m_enum = e; }
	~IfcTextPath();
	virtual const char* className() const { return "IfcTextPath"; }
	virtual shared_ptr<IfcPPObject> getDeepCopy( IfcPPCopyOptions& options );
	virtual void getStepParameter( std::stringstream& stream, bool is_select_type = false ) const;
	static shared_ptr<IfcTextPath> createObjectFromSTEP( const std::wstring& arg, const map_t<int,shared_ptr<IfcPPEntity> >& map );
	IfcTextPathEnum m_enum;
};

